name: CMake

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally well on Windows or Mac.
    # You can convert this to a matrix build if you need cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    
    - name: Configure CMake
      run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}

    - name: Build
      run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}

    - name: Tests
      working-directory: ${{github.workspace}}/build
      run: ctest -C ${{env.BUILD_TYPE}}


    - name: cppcheck - prepearing
      if: always()
      uses: deep5050/cppcheck-action@main
      with:
          github_token: ${{ secrets.GITHUB_TOKEN}}
          std: c++14
          exclude_check: ./build
          
    - name: cppcheck - report
      if: always()    
      run: if [ -f "./cppcheck_report.txt" ];  then cat ./cppcheck_report.txt && (exit 1); else (exit 0); fi 

    - name: Clang-format - report 
      if: always()    
      uses: DoozyX/clang-format-lint-action@v0.13
      with:
        source: '.'
        exclude: './build'
        extensions: 'h,cpp'
        style: Google
